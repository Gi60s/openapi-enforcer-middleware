openapi: 3.0.1
info:
  title: People, Heroes, and Villians
  version: 1.0.0
x-controller: people
paths:
  /people:
    get:
      x-operation: getPeople
      tags:
        - people
      parameters:
        - name: classification
          in: query
          schema:
            $ref: '#/components/schemas/Classification'
        - name: id
          in: query
          schema:
            type: string
      responses:
        200:
          description: A list of people, heroes, and villians
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      x-operation: addPerson
      tags:
        - people
        - heroes
        - villains
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        200:
          description: Successfully put
  /people/{id}:
    get:
      x-operation: getPerson
      tags:
        - people
        - heroes
        - villains
      responses:
        200:
          description: Get a person, hero, or villian
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    put:
      x-operation: putPerson
      tags:
        - people
        - heroes
        - villains
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        200:
          description: Get a person, hero, or villian
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    delete:
      x-operation: deletePerson
      tags:
        - people
        - heroes
        - villains
      responses:
        204:
          description: Deleted successfully
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /heroes:
    get:
      x-operaton: getHeroes
      tags:
        - heroes
      parameters:
        - name: class
          in: query
          style: form
          schema:
            $ref: '#/components/schemas/Rank'
      responses:
        200:
          description: A list of heroes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hero'
  /villains:
    get:
      x-operaton: getVillains
      tags:
        - villains
      parameters:
        - name: crime
          in: query
          style: form
          schema:
            $ref: '#/components/schemas/Crime'
      responses:
        200:
          description: A list of heroes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hero'
components:
  schemas:
    Classification:
      type: string
      enum:
        - hero
        - normal
        - villian
    Crime:
      type: string
      enum:
        - assult
        - bullying
        - theft
    Hero:
      allOf:
        - $ref: '#/components/schemas/Identity'
        - $ref: '#/components/schemas/Stats'
        - type: object
          properties:
            rank:
              $ref: '#/components/schemas/Rank'
    Identity:
      type: object
      properties:
        classification:
          $ref: '#/components/schemas/Classification'
        id:
          type: string
        name:
          type: string
          default: 'unknown'
        age:
          type: integer
    Person:
      oneOf:
        - $ref: '#/components/schemas/Hero'
        - $ref: '#/components/schemas/Identity'
        - $ref: '#/components/schemas/Villain'
      discriminator:
        propertyName: classification
    Rank:
      type: object
      properties:
        class:
          type: string
          enum:
            - A
            - B
            - C
            - D
        position:
          type: integer
          minimum: 1
          maximum: 20
    Stats:
      type: object
      properties:
        defense:
          type: integer
          minimum: 0
          maximum: 10
        speed:
          type: integer
          minimum: 0
          maximum: 10
        strength:
          type: integer
          minimum: 0
          maximum: 10
    Villain:
      allOf:
        - $ref: '#/components/schemas/Identity'
        - $ref: '#/components/schemas/Stats'
        - type: object
          properties:
            crimes:
              type: array
              items:
                $ref: '#/components/schemas/Crime'