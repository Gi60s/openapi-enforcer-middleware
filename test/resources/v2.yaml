swagger: "2.0"
info:
  title: People, Heroes, and Villians
  version: 1.0.0
paths:
  /people:
    get:
      x-operation: getPeople
      tags:
        - people
      parameters:
        - name: classification
          in: query
          type: string
          enum:
            - hero
            - normal
            - villain
        - name: id
          in: query
          type: string
      responses:
        200:
          description: A list of people, heroes, and villians
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        default:
          description: A standard response
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
    post:
      x-operation: addPerson
      tags:
        - people
        - heroes
        - villains
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Person'
      responses:
        200:
          description: Successfully put
  /people/{id}:
    get:
      x-operation: getPerson
      tags:
        - people
        - heroes
        - villains
      responses:
        200:
          description: Get a person, hero, or villian
          schema:
            $ref: '#/definitions/Person'
    put:
      x-operation: putPerson
      tags:
        - people
        - heroes
        - villains
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Person'
      responses:
        200:
          description: Get a person, hero, or villian
          schema:
            $ref: '#/definitions/Person'
    delete:
      x-operation: deletePerson
      tags:
        - people
        - heroes
        - villains
      responses:
        204:
          description: Deleted successfully
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /heroes:
    get:
      x-operaton: getHeroes
      tags:
        - heroes
      parameters:
        - name: rank
          in: query
          type: array
          items:
            type: string
            enum:
              - A
              - B
              - C
              - D
          collectionFormat: multi
      responses:
        200:
          description: A list of heroes
          schema:
            type: array
            items:
              $ref: '#/definitions/Hero'
  /villains:
    get:
      x-operaton: getVillains
      tags:
        - villains
      parameters:
        - name: crime
          in: query
          type: string
          enum:
            - assult
            - bullying
            - theft
      responses:
        200:
          description: A list of heroes
          schema:
            type: array
            items:
              $ref: '#/definitions/Hero'
definitions:
  Classification:
    type: string
    enum:
      - hero
      - normal
      - villian
  Crime:
    type: string
    enum:
      - assult
      - bullying
      - theft
  Hero:
    allOf:
      - $ref: '#/definitions/Identity'
      - $ref: '#/definitions/Stats'
      - type: object
        properties:
          rank:
            $ref: '#/definitions/Rank'
  Identity:
    type: object
    properties:
      classification:
        $ref: '#/definitions/Classification'
      id:
        type: string
      name:
        type: string
        default: 'unknown'
      age:
        type: integer
  Person:
    type: object
    additionalProperties: true
    # oneOf:
    #   - $ref: '#/definitions/Hero'
    #   - $ref: '#/definitions/Identity'
    #   - $ref: '#/definitions/Villain'
    # discriminator:
    #   propertyName: classification
  Rank:
    type: object
    properties:
      class:
        type: string
        enum:
          - A
          - B
          - C
          - D
      position:
        type: integer
        minimum: 1
        maximum: 20
  Stats:
    type: object
    properties:
      defense:
        type: integer
        minimum: 0
        maximum: 10
      speed:
        type: integer
        minimum: 0
        maximum: 10
      strength:
        type: integer
        minimum: 0
        maximum: 10
  Villain:
    allOf:
      - $ref: '#/definitions/Identity'
      - $ref: '#/definitions/Stats'
      - type: object
        properties:
          crimes:
            type: array
            items:
              $ref: '#/definitions/Crime'